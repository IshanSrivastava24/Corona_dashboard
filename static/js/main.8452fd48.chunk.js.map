{"version":3,"sources":["images/COVID19.jpg","components/Card.jsx","components/Cards.jsx","service/api.js","components/Countries.jsx","components/Chart.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","header","background","padding","CardComponent","cardTitle","value","desc","lastUpdate","classes","Grid","component","Card","style","margin","borderBottom","Box","className","Typography","varient","color","CardContent","start","end","duration","separator","Date","toDateString","useStyles","flexDirection","alignItems","display","container","marginBottom","Cards","data","confirmed","recovered","deaths","variant","gutterBottom","spacing","justify","CircularProgress","url","fetchData","country","a","changedUrl","axios","get","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchApi","NativeSelect","onChange","e","target","i","width","marginTop","Chart","labels","datasets","label","backgroundColor","options","legend","title","text","App","state","fetchedData","setState","console","log","this","props","toLocaleString","src","logo","alt","Component","withStyles","justifyContent","textAlign","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8452fd48.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/COVID19.a2427bb2.jpg\";","import { CardContent, Grid, Typography, Box, Card, makeStyles } from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\n\r\nconst useStyle = makeStyles({\r\n    header: {\r\n        background: '#F5F5F5',\r\n        padding: 10\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nconst CardComponent = ({ cardTitle, value, desc, lastUpdate }) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Grid component={Card} style= {{margin:20, borderBottom: '10px solid yellow'}}>\r\n            <Box className={classes.header}>\r\n                <Typography varient=\"h5\" color=\"textSecondary\">{cardTitle }</Typography>\r\n\r\n            </Box>\r\n            <CardContent>\r\n                <Typography varient=\"h5\">\r\n                    <CountUp start={0} end={value} duration={3} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{desc}</Typography>\r\n                <Typography>{new Date(lastUpdate).toDateString() }</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CardComponent;","import { Typography, Box, makeStyles, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        margin: '50px 0',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        display: 'flex'\r\n    },\r\n\r\n    container: {\r\n        color: '#8ACA2B',\r\n        marginBottom: 40\r\n}\r\n})\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate }}) => {\r\n    const classes = useStyles();\r\n    if (!confirmed) {\r\n        return <CircularProgress />\r\n    }\r\n    return(\r\n        <Box className={classes.component}>\r\n            <Typography className={classes.container} variant=\"h4\" gutterBottom>Coronavirus Cases Globaly</Typography>\r\n            <Grid container spacing={3} justify= \"center\">\r\n                <Card\r\n                    cardTitle=\"Infected\"\r\n                    value={confirmed.value}\r\n                    desc=\"Number of Infected Cases of COVID-19\"\r\n                    lastUpdate={lastUpdate}\r\n                />\r\n                <Card\r\n                    cardTitle=\"Recovered\"\r\n                    value={recovered.value}\r\n                    desc=\"Number of Recovered Cases of COVID-19\"\r\n                    lastUpdate={lastUpdate}\r\n                />\r\n                <Card\r\n                    cardTitle=\"Deaths\"\r\n                    value={deaths.value}\r\n                    desc=\"Number of Deaths caused by COVID-19\"\r\n                    lastUpdate={lastUpdate}\r\n                />\r\n            </Grid>\r\n        </Box>\r\n        )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios' ;\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changedUrl = url;\r\n    if (country) {\r\n        changedUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n       const { data:{ confirmed, recovered, deaths, lastUpdate} }= await axios.get(changedUrl);\r\n       return { confirmed, recovered, deaths, lastUpdate};\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map(country => country.name)\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import { fetchCountries } from \"../service/api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NativeSelect, Typography } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setCountries(await fetchCountries());\r\n        }\r\n        fetchApi();\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n        <Typography style={{marginBottom : 20}} variant=\"h5\"  color=\"textSecondary\">Reported Cases or Deaths by Country or Territory</Typography>\r\n        <NativeSelect onChange = {(e) => handleCountryChange(e.target.value)}>\r\n        <option value= \" \">United State</option>\r\n                {countries.map((country, i) => {\r\n                    return (\r\n                        <option key={i} value={country}>{country}</option>\r\n                    )\r\n                })}\r\n        \r\n        </NativeSelect>\r\n        </div>\r\n    )\r\n}\r\nexport default Countries;","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n \r\n\r\nconst useStyle = makeStyles({\r\n    container: {\r\n        width: '75%',\r\n        marginTop: '20px'\r\n    }\r\n})\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}}) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Box className = {classes.container}>\r\n       { confirmed ? (\r\n        <Bar\r\n        \r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: '# of Votes',\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                    ],\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: \"Current state in country\"}\r\n            \r\n            }}\r\n        \r\n            />) : ''\r\n        }\r\n        </Box>\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\nexport default Chart;\r\n","import {Component} from 'react'\nimport {Box, Typography, withStyles } from '@material-ui/core';\nimport logo from './images/COVID19.jpg';\nimport Cards from './components/Cards';\nimport Countries from './components/Countries';\nimport Chart from './components/Chart';\nimport { fetchData } from './service/api';\n\nconst style = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection:'column'\n  },\n  header: {\n    background: '#F5F5F5',\n    width: 400,\n    textAlign: 'center',\n    fontSize: 20,\n    padding: 10,\n    color: '#777'\n  },\n  lastUpdate: {\n    color: '#777',\n    fontSize: 12\n  }\n}\nclass App extends Component{\n\n  state = {\n    data: {},\n    country: ''\n  }\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n    this.setState({data: fetchedData})\n    console.log(fetchedData);\n  }\n\n  handleCountryChange = async(country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({data: fetchedData, country: country})\n    console.log(fetchedData);\n  }\n\n  render() {\n    const { data } = this.state;\n    return(\n      <Box className={this.props.classes.container}>\n        <Box className={this.props.classes.header}>COVID-19 CORONAVIRUS PANDEMIC</Box>\n        <Typography className={this.props.classes.lastUpdate}>Last Updated: {data.lastUpdate && new Date(data.lastUpdate).toLocaleString()}</Typography>\n        \n    <img style={{width:350}} src={logo} alt=\"covid\"/>\n        <Cards data={data} />\n        <Countries handleCountryChange={this.handleCountryChange }/>\n        <Chart data={data} />\n    </Box>\n    )\n  }\n} \n\nexport default withStyles(style)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}